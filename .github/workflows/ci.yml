name: CI action

on:
  push:
    branches:
      - master
      - primaryContact-attribute
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      HELM_CHART_PATH: package/helm/
      
    steps:
      - uses: actions/checkout@master
      - name: Setup dotnet core '3.1.100'
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.100'
      - name: Build with dotnet
        run: dotnet build hip-service.sln
      - name: Run unit tests
        run: dotnet test hip-service.sln
      - name: Set env
        run: |
          APP_VERSION=$(cat .appversion)
          echo "ARTIFACT_VERSION=$(echo $APP_VERSION-${{github.run_number}})" >> $GITHUB_ENV
      - name: Test coverage
        run: dotnet test test/In.ProjectEKA.HipServiceTest/In.ProjectEKA.HipServiceTest.csproj /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
      - name: Docker Registry
        env:
          DOCKER_REGISTRY_URL: docker.io
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: |
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD $DOCKER_REGISTRY_URL
      - name: Build docker image
        env:
          CONTAINER_REPO_NAME: hip
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: docker build -f package/docker/Dockerfile -t $DOCKER_USERNAME/$CONTAINER_REPO_NAME:$ARTIFACT_VERSION .
      - name: Push Docker Container to Registry
        env:
          CONTAINER_REPO_NAME: hip
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: docker push $DOCKER_USERNAME/$CONTAINER_REPO_NAME:$ARTIFACT_VERSION
      - name: Tag Docker Container with latest tag
        env:
          CONTAINER_REPO_NAME: hip
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: docker tag $DOCKER_USERNAME/$CONTAINER_REPO_NAME:$ARTIFACT_VERSION $DOCKER_USERNAME/$CONTAINER_REPO_NAME:v1
      - name: Push Latest Docker Container to Registry
        env:
          CONTAINER_REPO_NAME: hip
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: docker push $DOCKER_USERNAME/$CONTAINER_REPO_NAME:v1
     